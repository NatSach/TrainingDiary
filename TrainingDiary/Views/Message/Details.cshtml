@model TrainingDiary.Models.Message
@using TrainingDiary.Enums

@{
    ViewData["Title"] = "Details";
}

<div>
    <h4>
        @Html.DisplayFor(model => model.Title)
    </h4>
    <hr />
    <dl class="row">
        <dd class="col-sm-1">
            Date:
        </dd>
        <dt class="col-sm-11">
            @Html.DisplayFor(model => model.SendDate)
        </dt>
        <dd class="col-sm-1">
            From:
        </dd>
        <dt class="col-sm-11">
            @Html.DisplayFor(model => model.Sender.FirstName) @Html.DisplayFor(model => model.Sender.LastName)
        </dt>
        <dd class="col-sm-1">
            To:
        </dd>
        <dt class="col-sm-11">
            @Html.DisplayFor(model => model.Receiver.FirstName) @Html.DisplayFor(model => model.Receiver.LastName)
        </dt>
        @if (Model is Request request)
        {
            <dd class="col-sm-1">
                Status:
            </dd>
            <dt class="col-sm-11">
                @Html.DisplayFor(x => request.RequestStatus)
            </dt>
        }
    </dl>
    <hr />
    <p>
        @Html.DisplayFor(model => model.Content)
    </p>
</div>
<div>
    @if (Model is Request req && User.IsInRole(Role.Coach) && req.RequestStatus == RequestStatus.Awaiting)
    {
        <a class="btn btn-success" asp-action="AcceptRequest" asp-route-id="@req.Id">Accept</a>
        <a class="btn btn-danger" asp-action="DeclineRequest" asp-route-id="@req.Id">Decline</a>

        <br />
        <br />
    }
    <a asp-action="Index">Back to List</a>
</div>